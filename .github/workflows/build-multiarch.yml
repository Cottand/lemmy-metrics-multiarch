name: Build Multiarch Images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The Lemmy tag to build"
        required: true
        type: string

env:
  LEMMY_ORG: LemmyNet
  BE_REPO: lemmy
  FE_REPO: lemmy-ui
  DST_REGISTRY: ghcr.io
  TAG: ${{ github.event.inputs.tag }}

jobs:

  launch-x64-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.launch.outputs.label}}
    steps:
      - id: launch
        name: Launch Spot Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          ec2-ami: "ami-024e6efaf93d85776"
          ec2-instance-type: "c5d.large"
          runner-arch: "x64"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ec2-keypair-name: ${{ secrets.EC2_KEYPAIR }}
          ec2-security-group-id: ${{ secrets.EC2_SG }}
          github-repo: ${{ github.repository }}
          github-token: ${{ secrets.GH_TOKEN }}

  build-x64-images:
    needs: launch-x64-runner
    runs-on: ${{ needs.launch-x64-runner.outputs.label }}
    steps:
      - name: Checkout Build Files
        uses: actions/checkout@v3
      - name: Checkout Lemmy Frontend Source (${{ env.TAG }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.FE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.FE_REPO }}
          submodules: recursive
      - name: Checkout Lemmy Backend Source (${{ env.TAG }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.BE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.BE_REPO }}
          submodules: recursive
      - name: Override Dockerfiles
        run: cp -f ./Dockerfile-frontend ./${{ env.FE_REPO }}/Dockerfile && cp -f ./Dockerfile-backend ./${{ env.BE_REPO }}/Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DST_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push frontend (${{ env.TAG }}, x64)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.FE_REPO }}
          file: ./${{ env.FE_REPO }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-x64
      - name: Build and push backend (${{ env.TAG }}, x64)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.BE_REPO }}
          file: ./${{ env.BE_REPO }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-x64

  stop-x64-runner:
    needs: [launch-x64-runner,build-x64-images]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Terminate Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          shutdown-label: ${{ needs.launch-x64-runner.outputs.label }}
          github-token: ${{ secrets.GH_TOKEN }}
          github-repo: ${{ github.repository }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  launch-arm-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.launch.outputs.label}}
    steps:
      - id: launch
        name: Launch Spot Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          ec2-ami: "ami-08fdd91d87f63bb09"
          ec2-instance-type: "c6gn.large"
          runner-arch: "arm64"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ec2-keypair-name: ${{ secrets.EC2_KEYPAIR }}
          ec2-security-group-id: ${{ secrets.EC2_SG }}
          github-repo: ${{ github.repository }}
          github-token: ${{ secrets.GH_TOKEN }}

  build-arm-images:
    needs: launch-arm-runner
    runs-on: ${{ needs.launch-arm-runner.outputs.label }}
    steps:
      - name: Checkout Build Files
        uses: actions/checkout@v3
      - name: Checkout Lemmy Frontend Source (${{ env.TAG }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.FE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.FE_REPO }}
          submodules: recursive
      - name: Checkout Lemmy Backend Source
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.BE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.BE_REPO }}
          submodules: recursive
      - name: Override Dockerfiles
        run: cp -f ./Dockerfile-frontend ./${{ env.FE_REPO }}/Dockerfile && cp -f ./Dockerfile-backend ./${{ env.BE_REPO }}/Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DST_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push frontend (${{ env.TAG }}, ARM32v7)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.FE_REPO }}
          file: ./${{ env.FE_REPO }}/Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-arm
      - name: Build and push backend (${{ env.TAG }}, ARM32v7)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.BE_REPO }}
          file: ./${{ env.BE_REPO }}/Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-arm

  stop-arm-runner:
    needs: [launch-arm-runner,build-arm-images]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Terminate Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          shutdown-label: ${{ needs.launch-arm-runner.outputs.label }}
          github-token: ${{ secrets.GH_TOKEN }}
          github-repo: ${{ github.repository }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  launch-arm64-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.launch.outputs.label}}
    steps:
      - id: launch
        name: Launch Spot Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          ec2-ami: "ami-08fdd91d87f63bb09"
          ec2-instance-type: "c6gn.large"
          runner-arch: "arm64"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ec2-keypair-name: ${{ secrets.EC2_KEYPAIR }}
          ec2-security-group-id: ${{ secrets.EC2_SG }}
          github-repo: ${{ github.repository }}
          github-token: ${{ secrets.GH_TOKEN }}

  build-arm64-images:
    needs: launch-arm64-runner
    runs-on: ${{ needs.launch-arm64-runner.outputs.label }}
    steps:
      - name: Checkout Build Files
        uses: actions/checkout@v3
      - name: Checkout Lemmy Frontend Source (${{ env.TAG }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.FE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.FE_REPO }}
          submodules: recursive
      - name: Checkout Lemmy Backend Source
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LEMMY_ORG }}/${{ env.BE_REPO }}
          ref: ${{ env.TAG }}
          path: ${{ env.BE_REPO }}
          submodules: recursive
      - name: Override Dockerfiles
        run: cp -f ./Dockerfile-frontend ./${{ env.FE_REPO }}/Dockerfile && cp -f ./Dockerfile-backend ./${{ env.BE_REPO }}/Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DST_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push frontend (${{ env.TAG }}, ARM64)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.FE_REPO }}
          file: ./${{ env.FE_REPO }}/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-arm64
      - name: Build and push backend (${{ env.TAG }}, ARM64)
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.BE_REPO }}
          file: ./${{ env.BE_REPO }}/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-arm64

  stop-arm64-runner:
    needs: [launch-arm64-runner,build-arm64-images]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Terminate Runner
        uses: ubergeek77/aws-ec2-spot-runner@v1
        with:
          shutdown-label: ${{ needs.launch-arm64-runner.outputs.label }}
          github-token: ${{ secrets.GH_TOKEN }}
          github-repo: ${{ github.repository }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
  squash-images:
    needs: [build-x64-images,build-arm-images,build-arm64-images]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DST_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Squash Frontend Multiarch Tags
        uses: ubergeek77/squash-docker-tags@v1
        with:
          source-tags: |
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-x64
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-arm
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}-arm64
          destination-tag: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.FE_REPO }}:${{ env.TAG }}
      - name: Squash Backend Multiarch Tags
        uses: ubergeek77/squash-docker-tags@v1
        with:
          source-tags: |
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-x64
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-arm
            ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}-arm64
          destination-tag: ${{ env.DST_REGISTRY }}/${{ github.repository_owner }}/${{ env.BE_REPO }}:${{ env.TAG }}
